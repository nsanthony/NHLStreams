apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.flink.cluster_name }}-zookeeper
spec:
  replicas: {{ .Values.flink.numZookeeper }}
  selector:
    matchLabels:
      app: {{ .Values.flink.cluster_name }}
      component: {{ .Values.flink.cluster_name }}-zookeeper
  template:
    metadata:
      labels:
        app: {{ .Values.flink.cluster_name }}
        component: {{ .Values.flink.cluster_name }}-zookeeper
    spec:
      containers:
      - name: zookeeper
        image: {{ .Values.image }}:{{ .Values.imageTag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        workingDir: /opt/flink
        command: ["/bin/bash", "-c", "$FLINK_HOME/bin/start-zookeeper-quorum.sh; \
          while :;
          do
            if [[ -f $(find log -name '*zookeeper*.log') ]];
              then tail -f -n +1 log/*zookeeper*.log;
            fi;
          done"]
        ports:
        - containerPort: {{ .Values.zookeeper.clientPort }}
          name: client
        - containerPort: {{ .Values.zookeeper.serverPort }}
          name: server
        - containerPort: {{ .Values.zookeeper.leaderElectionPort }}
          name: leader-election
        livenessProbe:
          tcpSocket:
            port: {{ .Values.zookeeper.clientPort }}
          initialDelaySeconds: 30
          periodSeconds: 60
        resources:
          requests:
            cpu: {{ .Values.resources.zookeeper.requests.cpu }}
            memory: {{ .Values.resources.zookeeper.requests.memory }}
        volumeMounts:
        - name: flink-config-volume
          mountPath: /opt/flink/conf
      volumes:
      - name: flink-config-volume
        configMap:
          name: flink-config
          items:
          - key: flink-conf.yaml
            path: flink-conf.yaml
          - key: log4j.properties
            path: log4j.properties
          - key: zoo.cfg
            path: zoo.cfg

