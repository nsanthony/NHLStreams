plugins {
    id 'java'
    id 'java-library'
    id 'application'
}


group = 'nhlstreams'
version = '0.1.0'
mainClassName = 'data.controller.BarDown'
description = 'NHL data processor in NRT'

ext {
    javaVersion = '1.11'
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}




allprojects{
	repositories {
	    mavenCentral()
	    mavenLocal()
	    maven { url "https://repository.apache.org/content/repositories/snapshots/" }
	    maven { url "https://mvnrepository.com/artifact/org.fluentd/fluent-logger" }
	}
}



subprojects {
	apply plugin: 'java'
}

allprojects {
	apply plugin: 'java'
	
    dependencies {
    	compileOnly 'org.projectlombok:lombok:1.18.20'
		annotationProcessor 'org.projectlombok:lombok:1.18.20'
	
		testCompileOnly 'org.projectlombok:lombok:1.18.20'
		testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

		implementation 'org.slf4j:slf4j-api:1.7.26'
		implementation 'org.fluentd:fluent-logger:0.3.4'
		implementation 'com.google.flogger:flogger-system-backend:0.5.1'
		implementation 'com.google.code.gson:gson:2.7'
		
		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
		testImplementation 'org.mockito:mockito-inline:3.7.7'
	    testImplementation 'org.mockito:mockito-junit-jupiter:3.7.7'
	    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
	}
}




run.classpath = sourceSets.main.runtimeClasspath

test {
    useJUnitPlatform()
	systemProperties = ['java.util.logging.config.file' : 'logging.properties']    
}

application {
    mainClass = 'nhlstreams.BarDown'
}

jar {
  manifest { 
    attributes "Main-Class": "$mainClassName"
  }  

  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

